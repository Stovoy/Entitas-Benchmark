//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TValue tValue { get { return (TValue)GetComponent(GameComponentsLookup.TValue); } }
    public bool hasTValue { get { return HasComponent(GameComponentsLookup.TValue); } }

    public void AddTValue(int newV) {
        var index = GameComponentsLookup.TValue;
        var component = (TValue)CreateComponent(index, typeof(TValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceTValue(int newV) {
        var index = GameComponentsLookup.TValue;
        var component = (TValue)CreateComponent(index, typeof(TValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveTValue() {
        RemoveComponent(GameComponentsLookup.TValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTValue;

    public static Entitas.IMatcher<GameEntity> TValue {
        get {
            if (_matcherTValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTValue = matcher;
            }

            return _matcherTValue;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FValue fValue { get { return (FValue)GetComponent(GameComponentsLookup.FValue); } }
    public bool hasFValue { get { return HasComponent(GameComponentsLookup.FValue); } }

    public void AddFValue(int newV) {
        var index = GameComponentsLookup.FValue;
        var component = (FValue)CreateComponent(index, typeof(FValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceFValue(int newV) {
        var index = GameComponentsLookup.FValue;
        var component = (FValue)CreateComponent(index, typeof(FValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveFValue() {
        RemoveComponent(GameComponentsLookup.FValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFValue;

    public static Entitas.IMatcher<GameEntity> FValue {
        get {
            if (_matcherFValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFValue = matcher;
            }

            return _matcherFValue;
        }
    }
}

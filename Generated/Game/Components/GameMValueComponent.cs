//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MValue mValue { get { return (MValue)GetComponent(GameComponentsLookup.MValue); } }
    public bool hasMValue { get { return HasComponent(GameComponentsLookup.MValue); } }

    public void AddMValue(int newV) {
        var index = GameComponentsLookup.MValue;
        var component = (MValue)CreateComponent(index, typeof(MValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceMValue(int newV) {
        var index = GameComponentsLookup.MValue;
        var component = (MValue)CreateComponent(index, typeof(MValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveMValue() {
        RemoveComponent(GameComponentsLookup.MValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMValue;

    public static Entitas.IMatcher<GameEntity> MValue {
        get {
            if (_matcherMValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMValue = matcher;
            }

            return _matcherMValue;
        }
    }
}

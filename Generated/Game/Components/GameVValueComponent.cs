//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VValue vValue { get { return (VValue)GetComponent(GameComponentsLookup.VValue); } }
    public bool hasVValue { get { return HasComponent(GameComponentsLookup.VValue); } }

    public void AddVValue(int newV) {
        var index = GameComponentsLookup.VValue;
        var component = (VValue)CreateComponent(index, typeof(VValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceVValue(int newV) {
        var index = GameComponentsLookup.VValue;
        var component = (VValue)CreateComponent(index, typeof(VValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveVValue() {
        RemoveComponent(GameComponentsLookup.VValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVValue;

    public static Entitas.IMatcher<GameEntity> VValue {
        get {
            if (_matcherVValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVValue = matcher;
            }

            return _matcherVValue;
        }
    }
}

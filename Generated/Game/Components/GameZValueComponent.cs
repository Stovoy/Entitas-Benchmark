//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ZValue zValue { get { return (ZValue)GetComponent(GameComponentsLookup.ZValue); } }
    public bool hasZValue { get { return HasComponent(GameComponentsLookup.ZValue); } }

    public void AddZValue(int newV) {
        var index = GameComponentsLookup.ZValue;
        var component = (ZValue)CreateComponent(index, typeof(ZValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceZValue(int newV) {
        var index = GameComponentsLookup.ZValue;
        var component = (ZValue)CreateComponent(index, typeof(ZValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveZValue() {
        RemoveComponent(GameComponentsLookup.ZValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherZValue;

    public static Entitas.IMatcher<GameEntity> ZValue {
        get {
            if (_matcherZValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ZValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherZValue = matcher;
            }

            return _matcherZValue;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EValue eValue { get { return (EValue)GetComponent(GameComponentsLookup.EValue); } }
    public bool hasEValue { get { return HasComponent(GameComponentsLookup.EValue); } }

    public void AddEValue(int newV) {
        var index = GameComponentsLookup.EValue;
        var component = (EValue)CreateComponent(index, typeof(EValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceEValue(int newV) {
        var index = GameComponentsLookup.EValue;
        var component = (EValue)CreateComponent(index, typeof(EValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveEValue() {
        RemoveComponent(GameComponentsLookup.EValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEValue;

    public static Entitas.IMatcher<GameEntity> EValue {
        get {
            if (_matcherEValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEValue = matcher;
            }

            return _matcherEValue;
        }
    }
}

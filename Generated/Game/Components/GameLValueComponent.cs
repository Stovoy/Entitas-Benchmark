//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LValue lValue { get { return (LValue)GetComponent(GameComponentsLookup.LValue); } }
    public bool hasLValue { get { return HasComponent(GameComponentsLookup.LValue); } }

    public void AddLValue(int newV) {
        var index = GameComponentsLookup.LValue;
        var component = (LValue)CreateComponent(index, typeof(LValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceLValue(int newV) {
        var index = GameComponentsLookup.LValue;
        var component = (LValue)CreateComponent(index, typeof(LValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveLValue() {
        RemoveComponent(GameComponentsLookup.LValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLValue;

    public static Entitas.IMatcher<GameEntity> LValue {
        get {
            if (_matcherLValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLValue = matcher;
            }

            return _matcherLValue;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public KValue kValue { get { return (KValue)GetComponent(GameComponentsLookup.KValue); } }
    public bool hasKValue { get { return HasComponent(GameComponentsLookup.KValue); } }

    public void AddKValue(int newV) {
        var index = GameComponentsLookup.KValue;
        var component = (KValue)CreateComponent(index, typeof(KValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceKValue(int newV) {
        var index = GameComponentsLookup.KValue;
        var component = (KValue)CreateComponent(index, typeof(KValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveKValue() {
        RemoveComponent(GameComponentsLookup.KValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherKValue;

    public static Entitas.IMatcher<GameEntity> KValue {
        get {
            if (_matcherKValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.KValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherKValue = matcher;
            }

            return _matcherKValue;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DValue dValue { get { return (DValue)GetComponent(GameComponentsLookup.DValue); } }
    public bool hasDValue { get { return HasComponent(GameComponentsLookup.DValue); } }

    public void AddDValue(int newV) {
        var index = GameComponentsLookup.DValue;
        var component = (DValue)CreateComponent(index, typeof(DValue));
        component.V = newV;
        AddComponent(index, component);
    }

    public void ReplaceDValue(int newV) {
        var index = GameComponentsLookup.DValue;
        var component = (DValue)CreateComponent(index, typeof(DValue));
        component.V = newV;
        ReplaceComponent(index, component);
    }

    public void RemoveDValue() {
        RemoveComponent(GameComponentsLookup.DValue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDValue;

    public static Entitas.IMatcher<GameEntity> DValue {
        get {
            if (_matcherDValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDValue = matcher;
            }

            return _matcherDValue;
        }
    }
}
